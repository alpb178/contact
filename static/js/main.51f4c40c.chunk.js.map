{"version":3,"sources":["component/context/context.js","component/contacts/ContactsForm.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/form_component/TextInputGroup.js","component/contacts/AddContacts.js","component/contacts/EditContacts.js","component/pages/About.js","component/pages/NotFound.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","ContactsForm","ShowContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","Contacts","key","Header","titlePage","href","TextInputGroup","placeholder","label","onChange","error","htmlFor","classnames","defaultProps","AddContacts","errors","onSubmit","preventDefault","newContact","post","history","push","OnChange","target","EditContacts","upContac","match","params","put","About","NotFound","Test","App","basename","process","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51f4c40c.chunk.js","sourcesContent":["import React ,{Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state,action)=>{\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_CONTACT':\r\n                return{\r\n                     ...state,\r\n                     contacts: [action.payload, ...state.contacts]\r\n                    }\r\n        case 'UPDATE_CONTACT':\r\n                    return{\r\n                     ...state,\r\n                        contacts: state.contacts.map(contact=>contact.id == action.payload.id ? (\r\n                            contact=action.payload\r\n                        ) :contact)\r\n                            }\r\n            default:\r\n                return state;\r\n\r\n        \r\n    }  \r\n}\r\n\r\nexport class Provider extends Component{\r\n    state= {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state=>\r\n        reducer(state, action))\r\n    };\r\n     \r\n    //Metodo Clasico deprecated\r\n    //componentDidMount(){  axios.get('https://jsonplaceholder.typicode.com/users').then( res => this.setState({contacts: res.data})) }\r\n    \r\n   \r\n    async componentDidMount()\r\n    { const res= await axios.get('https://jsonplaceholder.typicode.com/users')\r\n    this.setState({contacts: res.data})}\r\n\r\n    render(){\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer= Context.Consumer;"," import React, { Component } from 'react'\r\n import PropTypes from 'prop-types'\r\n import {Consumer} from '../context/context'\r\n import axios from 'axios'\r\n import {Link} from 'react-router-dom'\r\n import { async } from 'q';\r\n \r\n class ContactsForm extends Component{\r\n    state={\r\n        ShowContactInfo: false\r\n    };\r\n\r\n    onShowClick=e =>{\r\n     this.setState({ShowContactInfo: !this.state.ShowContactInfo});\r\n    };\r\n\r\n    /* metodo clasico deprecated\r\n    onDeleteClick=(id,dispatch)=>{\r\n     Metodo clasico deprecated \r\n      axios.delete( `https://jsonplaceholder.typicode.com/users/${id}`).then(res=>  dispatch({type:'DELETE_CONTACT', payload: id}) )\r\n     };\r\n    */\r\n\r\n     onDeleteClick= async(id,dispatch)=>{\r\n       try{\r\n       const res= await axios.delete( `https://jsonplaceholder.typicode.com/users/${id}`)  \r\n       dispatch({type:'DELETE_CONTACT', payload: id})\r\n       }\r\n        catch{\r\n            dispatch({type:'DELETE_CONTACT', payload: id});\r\n       }\r\n        }\r\n        \r\n\r\n     render(){\r\n         const {id,name,email,phone}=this.props;\r\n         const {ShowContactInfo} = this.state;\r\n\r\n         return(\r\n             <Consumer>\r\n                 {value =>{\r\n                     const {dispatch}=value;\r\n                     return(\r\n                      \r\n             <div className=\"card card-body m-sm-3\" >\r\n             <h4>\r\n            <span className= \"badge badge-pill badge-danger m-sm-3 \"> {id} </span>\r\n              {name}\r\n              <i onClick={this.onShowClick} className=\"fas fa-sort-down m-sm-3 \" style={{ cursor: 'pointer'}}/>\r\n              <i onClick={this.onDeleteClick.bind(this,id,dispatch)} \r\n              className=\"fas fa-times m-sm-3 \" \r\n              style={{ cursor: 'pointer' ,\r\n               float:'right', \r\n               color:'black'}}/>\r\n               <Link to={`/editContacts/${id}`}>  \r\n               <i className=\"fas fa-pencil-alt  m-sm-3 \" style={{ cursor: 'pointer',float:'right', color:'red'}}/>\r\n                </Link>\r\n             </h4>\r\n               \r\n               {ShowContactInfo ? (\r\n                  <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                 \r\n                   </ul>\r\n                 ): null}\r\n        \r\n        </div>\r\n                     )\r\n                 }}\r\n\r\n             </Consumer>\r\n\r\n\r\n\r\n         )\r\n     }\r\n         \r\n }\r\n\r\n\r\n export default ContactsForm;"," import React, { Component } from 'react'\r\n import ContactsForm from './ContactsForm'\r\n import {Consumer} from  '../context/context'\r\n \r\n class Contacts extends Component{\r\n     \r\n     render(){\r\n\r\n         return(\r\n             <Consumer>\r\n                {value=> {\r\n                    const {contacts}=value;\r\n                    return(\r\n                        <div>\r\n               {contacts.map(contact =>\r\n               \r\n              <ContactsForm \r\n                id={contact.id}\r\n                key={contact.id}\r\n                name={contact.name}\r\n                phone={contact.phone}\r\n                email={contact.email}\r\n              />\r\n               )}\r\n             </div>\r\n                    );\r\n                }}\r\n             </Consumer>\r\n         )\r\n     }\r\n }\r\n\r\n\r\n\r\n export default Contacts;","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Header(props){\r\n    const {titlePage}=props\r\n    return(\r\n        <nav className=\"nav navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">\r\n            {titlePage}\r\n            </a>\r\n        <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">\r\n                      <i className=\"fas fa-home\"/> home </Link> \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/addcontacts\" className=\"nav-link\">\r\n                  <i className=\"fas fa-plus\"/>   Add Contact </Link>   \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/about\" className=\"nav-link\"> \r\n                  <i className=\"fas fa-question\"/>About</Link>   \r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/test\" className=\"nav-link\"> \r\n                  <i className=\"fas fa-question\"/>Test</Link>   \r\n                </li>\r\n           \r\n            </ul>\r\n        </div>\r\n        </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    value,\r\n    label,\r\n    onChange,\r\n    error\r\n}) => {\r\n\r\n    return (\r\n        <div  className=\"form-group\">\r\n             <label htmlFor={name}>{label}</label>\r\n             <input \r\n             type={type}\r\n             name={name}\r\n             className={classnames ('form-control form-control-lg',{'is-invalid':error })}\r\n             placeholder={placeholder}\r\n             value={value}\r\n             onChange={onChange}/>\r\n\r\n             {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                                \r\n        </div>\r\n\r\n       \r\n\r\n    );\r\n};\r\n   \r\nTextInputGroup.propTypes = {\r\n    name:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    label:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\n\r\n\r\nexport default TextInputGroup;\r\n\r\n \r\n                                     ","import React, { Component } from 'react'\r\nimport ContactsForm from './ContactsForm'\r\nimport {Consumer} from  '../context/context'\r\nimport TextInputGroups from  '../layout/form_component/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nclass AddContacts extends Component{\r\n\r\n    state={\r\n        id:'',\r\n        name: '',\r\n        email: '',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const{id,name, email, phone}=this.state;\r\n\r\n        //check errors\r\n         if(name==''){\r\n             this.setState({errors: {name: 'Name is required'}});\r\n             return;\r\n         }\r\n\r\n         if(phone==''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email==''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact= {\r\n          //  id:uuid,\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n       // metodo antiguo axios.post('https://jsonplaceholder.typicode.com/users', newContact).then(res =>dispatch({type: 'ADD_CONTACT', payload: res.data}))\r\n        \r\n       const res= await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n       dispatch({type:'ADD_CONTACT',payload:res.data})\r\n       \r\n\r\n       // de forma offline\r\n       // dispatch({type: 'ADD_CONTACT', payload: newContact})\r\n        // limpiando el formulario\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:''\r\n        })\r\n\r\n        // este comando es para ir hacia la pagina q dice\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    OnChange= e => this.setState({[e.target.name]:e.target.value});\r\n\r\n    \r\n    render(){\r\n        const{name,phone,email,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n              {\r\n                value=> {\r\n                    const {dispatch}=value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                <h1>add Contact</h1> \r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                 <TextInputGroups\r\n                                     label=\"Name\"\r\n                                     name=\"name\"\r\n                                     placeholder=\"Enter Name ...\"\r\n                                     value={name}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.name}\r\n                                     />  \r\n                                   <TextInputGroups\r\n                                     label=\"Eamil\"\r\n                                     name=\"email\"\r\n                                     type=\"email\"\r\n                                     placeholder=\"Enter email ...\"\r\n                                     value={email}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.email}\r\n                                     />  \r\n                                     <TextInputGroups\r\n                                     label=\"Phone\"\r\n                                     name=\"phone\"\r\n                                     placeholder=\"Enter phone ...\"\r\n                                     value={phone}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.phone}\r\n                                     />  \r\n                                                                              \r\n                                 <input \r\n                                 type=\"submit\" \r\n                                  className=\"btn btn-light btn-block \" \r\n                                  value=\"add contact\"/>\r\n                                </form>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                      \r\n                    )\r\n\r\n                }\r\n              }\r\n            </Consumer>\r\n             )\r\n               \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddContacts;","import React, { Component } from 'react'\r\nimport ContactsForm from './ContactsForm'\r\nimport {Consumer} from  '../context/context'\r\nimport TextInputGroups from  '../layout/form_component/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nclass EditContacts extends Component{\r\n\r\n    state={\r\n        id:'',\r\n        name: '',\r\n        email: '',\r\n        phone:'',\r\n        errors:{}\r\n\r\n    };\r\n    // cargando los datos del backend para la modificacion\r\n    async componentDidMount(){\r\n        const {id}= this.props.match.params;\r\n        const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact=res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    //metodo del boton\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n\r\n        const{name, email, phone}=this.state;\r\n\r\n        //check errors\r\n         if(name==''){\r\n             this.setState({errors: {name: 'Name is required'}});\r\n             return;\r\n         }\r\n\r\n         if(phone==''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email==''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        //objeto modificado\r\n         const upContac={\r\n             name,\r\n             email,\r\n             phone\r\n         }\r\n       \r\n        //modificando el contacto\r\n        const {id}=this.props.match.params;\r\n        const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,upContac)\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data})\r\n\r\n\r\n         \r\n        // limpiando el formulario\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:''\r\n        })\r\n\r\n        // este comando es para ir hacia la pagina q dice\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    OnChange= e => this.setState({[e.target.name]:e.target.value});\r\n\r\n    \r\n    render(){\r\n        const{name,phone,email,errors}=this.state;\r\n        return(\r\n            <Consumer>\r\n              {\r\n                value=> {\r\n                    const {dispatch}=value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                <h1>Edit Contact</h1> \r\n                            </div>\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                 <TextInputGroups\r\n                                     label=\"Name\"\r\n                                     name=\"name\"\r\n                                     placeholder=\"Enter Name ...\"\r\n                                     value={name}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.name}\r\n                                     />  \r\n                                   <TextInputGroups\r\n                                     label=\"Eamil\"\r\n                                     name=\"email\"\r\n                                     type=\"email\"\r\n                                     placeholder=\"Enter email ...\"\r\n                                     value={email}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.email}\r\n                                     />  \r\n                                     <TextInputGroups\r\n                                     label=\"Phone\"\r\n                                     name=\"phone\"\r\n                                     placeholder=\"Enter phone ...\"\r\n                                     value={phone}\r\n                                     onChange={this.OnChange}\r\n                                     error={errors.phone}\r\n                                     />  \r\n                                                                              \r\n                                 <input \r\n                                 type=\"submit\" \r\n                                  className=\"btn btn-light btn-block \" \r\n                                  value=\"Update contact\"/>\r\n                                </form>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                      \r\n                    )\r\n\r\n                }\r\n              }\r\n            </Consumer>\r\n             ) \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default EditContacts;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class About extends Component {\r\n    static propTypes = {\r\n        prop: PropTypes\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <h1 className=\"display-4\">About Contact Manager</h1> \r\n               <p className=\"lead\">Simple App for manage contact</p>\r\n               <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n          <h1 className=\"display-4\"> 404 Page not NotFound</h1> \r\n           <p className=\"lead\">Sorry, that page does not exist</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Contacts from './component/contacts/Contacts'\nimport Header from './component/layout/Header'\nimport {Provider} from './component/context/context'\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom'\nimport AddContacts from './component/contacts/AddContacts'\nimport EditContacts from './component/contacts/EditContacts'\nimport About from './component/pages/About'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport NotFound from './component/pages/NotFound';\nimport Test from './component/test/Test';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n    <div className=\"App\" >\n     < Header titlePage=\"Contact Manager\" />\n     <div className=\"container\">\n       <Switch>\n         <Route exact path=\"/\" component= {Contacts}/>\n         <Route exact path=\"/addcontacts\" component= {AddContacts}/>\n         <Route exact path=\"/editContacts/:id\" component= {EditContacts}/>\n         <Route exact path=\"/about\" component= {About}/>\n         <Route exact path=\"/test\" component= {Test}/>\n         <Route component= {NotFound}/>\n\n       </Switch>\n     </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}